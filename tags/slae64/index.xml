<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>slae64 on nibbles</title>
    <link>https://0xnibbles.github.io/tags/slae64/</link>
    <description>Recent content in slae64 on nibbles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Dec 2022 18:54:45 +0000</lastBuildDate><atom:link href="https://0xnibbles.github.io/tags/slae64/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SLAE64 Assignment 1 - TCP Bind Shellcode</title>
      <link>https://0xnibbles.github.io/posts/slae64/slae_64_assignment_1/</link>
      <pubDate>Fri, 30 Dec 2022 18:54:45 +0000</pubDate>
      
      <guid>https://0xnibbles.github.io/posts/slae64/slae_64_assignment_1/</guid>
      <description>This post introduces the first mission to my SLAE64 journey.
Introduction The main goal for the first SLAE64 assignment is to develop a shellcode for bind TCP shell with the following requirements:
Binds to a port; User needs to provide a correct password Executing a shell on incoming connection if password is correct; The shellcode should be null-free; Past, present and Future The exercises of SLAE64 are identical to the ones of SLAE32, so for the 64 bit version I will have a more simple approach.</description>
    </item>
    
  </channel>
</rss>
